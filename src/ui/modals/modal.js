import { Component, Button } from '../../ui.js'; // Assuming Button is also in ui.js

export class BaseModal {
    constructor(title, app) {
        if (!app || !app.ui) {
            throw new Error("BaseModal requires an app instance with a UI controller.");
        }
        this.title = title;
        this.app = app;
        this.ui = app.ui; // Shortcut to UIController
        // Removed this.modalElement as UIController manages the modal shell
    }

    // Removed _createElement() as UIController is responsible for creating the modal DOM structure

    getContent() {
        throw new Error("Method 'getContent()' must be implemented by subclasses.");
    }

    getFooterButtons() {
        throw new Error("Method 'getFooterButtons()' must be implemented by subclasses.");
    }

    show() {
        // BaseModal.show() now simply calls UIController.showModal, passing the content and buttons
        // generated by the subclass. UIController handles the actual DOM manipulation for the modal frame.
        this.ui.showModal({
            title: this.title,
            body: this.getContent(),
            buttons: this.getFooterButtons()
        });
    }

    hide() {
        // This will be called by buttons within the modal (e.g., a "Cancel" or "Close" button)
        this.ui.hideModal();
    }
}
